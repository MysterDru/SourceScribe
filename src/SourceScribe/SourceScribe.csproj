<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <IsPackable>true</IsPackable>
        <Nullable>disable</Nullable>
        <LangVersion>11</LangVersion>

        <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
        <IsRoslynComponent>true</IsRoslynComponent>
        <developmentDependency>true</developmentDependency>

        <!-- Nuget Package Properties -->
        <PackageId>SourceScribe.alpha</PackageId>
        <Authors>MysterDru</Authors>
        <Product>SourceScribe</Product>
        <Description>SourceScribe is a Roslyn Source Generator Project that allows generating compiled code from text template files. No need to write your own source generators for code generation!</Description>
        <PackageProjectUrl>https://github.com/MysterDru/SourceScribe</PackageProjectUrl>
        <RepositoryUrl>https://github.com/MysterDru/SourceScribe</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <IsPackable>true</IsPackable>
        <IncludeSymbols>true</IncludeSymbols>
        <IncludeSource>true</IncludeSource>
        <NoPackageAnalysis>true</NoPackageAnalysis>
        <IncludeBuildOutput>false</IncludeBuildOutput>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <VersionPrefix>0.0.1</VersionPrefix>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.CSharp" Version="4.5.0" PrivateAssets="all" GeneratePathProperty="true"/>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.5.0"/>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.5.0"/>
        <PackageReference Include="Scriban" Version="5.9.0" IncludeAssets="Build"/>
        <PackageReference Include="System.Threading.Tasks.Extensions" Version="4.5.4" PrivateAssets="all" GeneratePathProperty="true"/>
    </ItemGroup>

    <ItemGroup>
        <None Include="..\..\README.md" Pack="true" PackagePath="\">
            <Link>README.md</Link>
        </None>
    </ItemGroup>
    <!-- support loading scriban dependencies into source directly -->
    <PropertyGroup>
        <PackageScribanIncludeSource>true</PackageScribanIncludeSource>
    </PropertyGroup>

    <PropertyGroup>
        <GetTargetPathDependsOn>
            $(GetTargetPathDependsOn);GetDependencyTargetPaths
        </GetTargetPathDependsOn>
    </PropertyGroup>
    <Target Name="GetDependencyTargetPaths">
        <ItemGroup>
            <TargetPathWithTargetPlatformMoniker
                    Include="$(PKGMicrosoft_CSharp)\lib\netstandard2.0\Microsoft.CSharp.dll"
                    IncludeRuntimeDependency="false"/>
            <TargetPathWithTargetPlatformMoniker
                    Include="$(PKGSystem_Threading_Tasks_Extensions)\lib\netstandard2.0\System.Threading.Tasks.Extensions.dll"
                    IncludeRuntimeDependency="false"/>
        </ItemGroup>
    </Target>


    <!-- Project Dependencies -->
    <!-- 
        Copy analyzer dependencies to the output folder to be prepared for nuget pack command.
        Any dlls that are used by the analyzer, including the analyzer assembly itself, needs to be in the analyzer\dotnet\cs folder.
        Any dlls that need to be referenced by consuming projects need to be in the lib folder.
    -->
    <Target Name="CopyAnalyzerDependencies" AfterTargets="Build">
        <ItemGroup>
            <!-- grab all dependencies from the output folder to use as analyzer dependencies -->
            <AnalyzerAssemblies Include="$(OutputPath)\*.dll"/>
            <!-- need the analyzer install & uninstall scripts -->
            <Tools Include="tools\**\*.*"/>
        </ItemGroup>
        <Copy SourceFiles="@(AnalyzerAssemblies)" DestinationFolder="$(OutputPath)\_pack\analyzers\dotnet\cs" SkipUnchangedFiles="false"/>
        <Copy SourceFiles="@(Tools)" DestinationFolder="$(OutputPath)\_pack\tools" SkipUnchangedFiles="false"/>
    </Target>
    <!-- 
        Configure files to be included in the nuget package, which are prepared by the CopyAnalyzerDependencies target, 
        but then also need to be registered with 'Pack="true"' for nuget to detect the files, and the folder needs to be specified int the package output. -->
    <ItemGroup>
        <!-- tools -->
        <None Update="$(OutputPath)\_pack\tools\**\*.*" CopyToOutputDirectory="Always" Pack="true" PackagePath="tools"/>
        <!-- analyzer dependencies -->
        <None Include="$(OutputPath)\_pack\analyzers\dotnet\cs\*.dll" Pack="true" PackagePath="analyzers\dotnet\cs" Visible="false"/>
    </ItemGroup>
</Project>
